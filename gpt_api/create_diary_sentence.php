<?php

// 1. ライブラリと環境変数の読み込み
// --------------------------------------------------
// Composerでインストールしたライブラリを読み込みます
require __DIR__ . '/vendor/autoload.php';

// .envファイルから環境変数を読み込みます
$dotenv = Dotenv\Dotenv::createImmutable(__DIR__);
$dotenv->load();


// 2. APIキーの準備
// --------------------------------------------------
// .envファイルからAPIキーを取得します
$apiKey = $_ENV['OPENAI_API_KEY'];

// APIキーが設定されているか確認します
if (empty($apiKey) || $apiKey === "sk-...") {
    die("エラー: .envファイルに有効なOPENAI_API_KEYが設定されていません。\n");
}

// OpenAIのクライアントを初期化します
$client = OpenAI::client($apiKey);


// 3. 要約したいテキストと指示の設定
// --------------------------------------------------
// ★★★ ここに要約したい文章を入力してください ★★★
$longText = "1. 朝、縦列で並びみんなに「おはよう！」と言った場面
2. 運動場で先生とおにごっこをして遊んでいる場面
3. お昼、ふかろからおにぎりを出して食べたり友達と分け合った場面
4. 飛行機の絵を書いて先生からほめられた場面と、帰り道でみんなと「さようなら！」と挨拶を交わす場面

背景には、幼稚園の風景を入れます。それぞれの子供たちはかわいらしい制服を着ています。朝と帰りの風景では、幼稚園の建物や緑豊かな運動場、遊具などを描きましょう。遊んでいる場面では、活発に動き回る子供たちや笑顔の先生を、そしてお昼は楽しくお弁当を食べる子供たちとおにぎり、その周りにお弁当の中身を描きます。絵を描いている場面では、子供たちが楽しそうに色とりどりのクレヨンで絵を描く様子と、黄色の飛行機の絵、そして先生が微笑みながらほめる様子を描きます。

明るくやさしい色合い、水彩画風、子どもの絵日記のようなタッチで，それぞれのイベントを**1つの区画に描く**構成で、必ず**4区画の1枚の画像**として集約する。また，画像内に文字はいりません．";

// AIへの指示（システムメッセージ）
$systemInstruction = $systemInstruction = <<<EOT
あなたは日本の小学生・幼稚園生向けの「絵日記」のアシスタントです。
ユーザーから与えられるのは以下の情報です：
1. 画像生成用のプロンプト（絵の内容）
2. 日付（例：2025年10月19日）
3. 土地情報（幼稚園）

次の手順で文章を作成してください：

1. 画像に描かれた情景を、**幼稚園生が書くような短くやさしい文章**で説明する。
2. 一文は短く、読みやすくする。
3. 言葉遣いは**子どもが話すような表現**にする。
4. 文章は絵日記風に自然につながるようにする。
5. 出力は文章のみ、箇条書きやJSON、コードブロックは使わない。
6. 文章の最後に「たのしかった！」など**ポジティブな感情**を必ず一言添える。
7. 100～150字以内で生成する。
8. 日付はいりません．
EOT;




echo "テキストの要約を開始します...\n";

try {
    // テキスト生成（チャット）APIを呼び出します
    $response = $client->chat()->create([
        // 'model' => 'gpt-3.5-turbo', // テキスト生成用のモデル
        'model' => 'gpt-4', // 高精度テキスト生成用のモデル

        'messages' => [
            // AIの役割や前提条件を指示
            ['role' => 'system', 'content' => $systemInstruction],
            // 処理してほしいテキストを渡す
            ['role' => 'user', 'content' => $longText],
        ],
    ]);

    // 応答から要約テキストを取り出します
    $summary = $response->choices[0]->message->content;

    // 結果を表示します
    echo "要約が完了しました！\n";
    echo "====================\n";
    echo $summary . "\n";
    echo "====================\n";

} catch (Exception $e) {
    // エラーが発生した場合の処理
    echo "エラーが発生しました: " . $e->getMessage() . "\n";
}